# user api for swagger

paths:
  /user/login:
    post:
      tags:
        - user
      summary: 로그인
      description: ""
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  tokens:
                    type: object
                    example:
                      {
                        ACCESS-1A3BJOJAPEOJRPA3JRAFEJIJ3434R2: string,
                        REFRESH-19WAHR093HAR89AWHG9H0A: string,
                      }

        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fail'

  /user/logout:
    get:
      tags:
        - user
      summary: 로그아웃
      description: ""
      operationId: logoutUser
      parameters:
        - in: cookie
          name: refresh_token
          schema:
            $ref: "#/components/schemas/Cookie"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /user/signup:
    post:
      tags:
        - user
      summary: 회원가입
      description: ""
      operationId: signupUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Signup"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fail'

  /user/nicknamedupcheck:
    put:
      tags:
        - user
      summary: 닉네임 중복 체크
      description: ""
      operationId: checkNickname
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Nickname"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessDupCheck'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailDupCheck'

  /user/emaildupcheck:
    put:
      tags:
        - user
      summary: 이메일 중복 체크
      description: ""
      operationId: checkEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Email"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessDupCheck'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailDupCheck'

  /user/sendauthmail:
    post:
      tags:
        - user
      summary: "이메일 인증메일 보내기"
      description: ""
      operationId: sendAuthMail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Email"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fail'

  /user/checkauth:
    put:
      tags:
        - user
      summary: "이메일 인증번호 확인"
      description: ""
      operationId: checkAuth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthNum"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fail'

  /user/update:
    put:
      tags:
        - user
      summary: "회원정보수정"
      description: "닉네임만 바꿀 수 있음"
      operationId: updateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Nickname"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fail'

  /user/checkbarowner:
    put:
      tags:
        - user
      summary: '사장님 확인'
      description: '일단 닉네임 보내는 걸로 했는데 다시 정해야 함.'
      operationId: checkBarOwner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Nickname"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarOwnerCheck'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /user/checkbartender:
    put:
      tags:
        - user
      summary: '바텐더 확인'
      description: '일단 닉네임 보내는 걸로 했는데 다시 정해야 함.'
      operationId: checkBartender
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Nickname"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BartenderCheck"
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /user/delete:
    delete:
      tags:
        - user
      summary: "회원 탈퇴"
      description: ""
      operationId: deleteUser
      parameters:
        - in: cookie
          name: refresh_token
          schema:
            $ref: "#/components/schemas/Cookie"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"
